{"version":3,"sources":["pages/HomePage.js","components/CardPreview.js","components/ListCards.js","components/CardsFilter.js","pages/CardsPage.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","props","handleUsernameChange","event","setState","username","target","value","state","nameError","nameError2","handleSubmit","bind","preventDefault","this","length","test","localStorage","setItem","history","push","onSubmit","style","color","fontSize","className","type","placeholder","onChange","Component","withRouter","CardPreview","array","join","imageUrl","card","key","id","src","getImgUrl","name","setName","convertToString","types","colors","text","ListCards","cards","errorMsg","map","CardsFilter","handleInputChange","search","onFilter","filterData","selectedColors","selectedTypes","sortBy","selectedSort","handleColorChange","handleTypeChange","handleSortByChange","colorsOptions","label","typesOptions","sortByOptions","axios","get","then","response","data","reduce","acc","catch","error","console","log","closeMenuOnSelect","isMulti","options","onClick","CardsPage","filteredCards","userName","getItem","trackPromise","filter","colorMatchCard","forEach","includes","typeMathcCard","nameMatchCard","searchParam","toLowerCase","cardName","cardText","sort","compareValues","order","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","filterCards","App","path","Boolean","window","location","hostname","match","LoadingIndicator","usePromiseTracker","promiseInProgress","width","height","display","justifyContent","alignItems","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ba49a6a7.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport './HomePage.css'\r\n\r\nclass HomePage extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        //   username: localStorage.getItem(\"userName\") || '',\r\n            username: '',\r\n            nameError: '',\r\n            nameError2: ''\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n\r\n     handleSubmit(event, props) {\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            nameError: \"\",\r\n            nameError2: \"\"\r\n        })\r\n\r\n        if ((this.state.username).length > 2 && /^[A-Z]/.test( this.state.username )) {\r\n           localStorage.setItem(\"userName\", this.state.username);\r\n           this.props.history.push(\"/cards\");\r\n        } \r\n        else if (!/^[A-Z]/.test( this.state.username )) {\r\n            this.setState({\r\n                nameError: \"!!! First letter should be UPPERCASE !!!\"\r\n            })\r\n        }\r\n\r\n        if (this.state.username.length <= 2) {\r\n            this.setState({\r\n                nameError2: \"!!! Min 3 characters !!!\"\r\n            })\r\n        }\r\n     };\r\n    \r\n     handleUsernameChange = (event) => {\r\n        this.setState({\r\n           username: event.target.value\r\n     })\r\n    } \r\n\r\n    render() {\r\n        return (\r\n                <form onSubmit={this.handleSubmit}>\r\n                  \r\n                  <div style={{ color: \"red\", fontSize: 20 }}>{this.state.nameError}</div>\r\n                  <div style={{ color: \"red\", fontSize: 20 }}>{this.state.nameError2}</div>\r\n                    \r\n                  <div>\r\n                        <label className=\"user-name\">Username:</label>\r\n                        <input\r\n                        className=\"todo-input\"\r\n                        type=\"text\"\r\n                        placeholder=\"username\"\r\n                        value={this.state.username}\r\n                        onChange={this.handleUsernameChange}\r\n                        // pattern=\".{3,}\" \r\n                        // required title=\"min 3 characters\"\r\n                        />\r\n                    </div>\r\n                \r\n                        <button type=\"submit\">Submit</button>\r\n                </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(HomePage);\r\n","import React, { Component } from 'react';\r\nimport './CardPreview.css';\r\n\r\nexport class CardPreview extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    convertToString(array) {\r\n        return array.join(', ');\r\n    }\r\n\r\n    getImgUrl(imageUrl) {\r\n        if (imageUrl) {\r\n            return imageUrl;\r\n        }\r\n\r\n        return 'https://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=126210&type=card';\r\n    }\r\n\r\n    render() {\r\n        const {card} = this.props;\r\n        return (\r\n            <div className=\"card-preview width80 mobile-section \" key={card.id}>\r\n                <img className=\"image\" src={this.getImgUrl(card.imageUrl)} />\r\n                <div className=\"card-text width80text\">\r\n                    <div className=\"name\">\r\n                        Name: {card.name}\r\n                    </div>\r\n                    <div className=\"set-name\">\r\n                        <b>Set Name:</b> {card.setName}\r\n                    </div>\r\n                    <div className=\"type\">\r\n                        <b>Type:</b> {this.convertToString(card.types)}\r\n                    </div>\r\n                    <div className=\"color\">\r\n                        <b>Colors:</b> {this.convertToString(card.colors)}\r\n                    </div>\r\n                    <div className=\"color\">\r\n                        <b>Text:</b> {card.text}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardPreview;\r\n","import React, { Component } from 'react'\r\nimport CardPreview from './CardPreview';\r\nimport './ListCards.css';\r\n\r\nclass ListCards extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {cards, errorMsg} = this.props;\r\n        return (\r\n            <div className=\"list-cards\">\r\n                {\r\n                    cards.length ?\r\n                    cards.map(card => <CardPreview key={card.id} card={card} /> ) :\r\n                    null \r\n                }\r\n                { errorMsg ? <div>{errorMsg}</div> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListCards\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport Select from 'react-select';\r\nimport './CardsFilter.css';\r\n\r\nclass CardsFilter extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            colorsOptions: [\r\n                {\r\n                    value: 'white',\r\n                    label: 'White'\r\n                },\r\n                {\r\n                    value: 'blue',\r\n                    label: 'Blue'\r\n                },\r\n                {\r\n                    value: 'black',\r\n                    label: 'Black'\r\n                },\r\n                {\r\n                    value: 'red',\r\n                    label: 'Red'\r\n                },\r\n                {\r\n                    value: 'green',\r\n                    label: 'Green'\r\n                }\r\n            ],\r\n            search: '',\r\n            selectedColors: [],\r\n            typesOptions: [],\r\n            selectedTypes: [],\r\n            sortByOptions: [\r\n                {\r\n                    value: 'asc',\r\n                    label: 'Ascending'\r\n                },\r\n                {\r\n                    value: 'desc',\r\n                    label: 'Descending'\r\n                }\r\n            ],\r\n            selectedSort: 'asc'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://api.magicthegathering.io/v1/types')\r\n            .then(response => {\r\n                const types = response.data.types.reduce((acc, type) => {\r\n                    return [\r\n                        ...acc,\r\n                        {\r\n                            value: type,\r\n                            label: type\r\n                        }\r\n                    ];\r\n                  }, []);\r\n\r\n                this.setState({\r\n                    typesOptions: types\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        this.setState({\r\n            search: event.target.value\r\n        })\r\n    }\r\n\r\n    onFilter = () => {\r\n        const filterData = {\r\n            search: this.state.search,\r\n            colors: this.state.selectedColors,\r\n            types: this.state.selectedTypes,\r\n            sortBy: this.state.selectedSort\r\n        }\r\n\r\n        this.props.onFilter(filterData);\r\n    }\r\n\r\n    handleColorChange = (event) => {\r\n        this.setState({\r\n            selectedColors: event\r\n        })\r\n    }\r\n\r\n    handleTypeChange = (event) => {\r\n        this.setState({\r\n            selectedTypes: event\r\n        })\r\n    }\r\n\r\n    handleSortByChange = (event) => {\r\n        this.setState({\r\n            selectedSort: event\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"cards-filter\">\r\n                <div className=\"input\">\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Search by name or text\" value={this.state.search} onChange={this.handleInputChange} />\r\n                </div>\r\n            <div className=\"filter\">\r\n                <div className=\"colors\">\r\n                    <Select\r\n                        closeMenuOnSelect={false}\r\n                        placeholder=\"COLORS\"\r\n                        isMulti\r\n                        options={this.state.colorsOptions}\r\n                        onChange={this.handleColorChange} />\r\n                </div>\r\n\r\n                    <div className=\"types\">\r\n                        <Select\r\n                            closeMenuOnSelect={false}\r\n                            placeholder=\"TYPES\"\r\n                            isMulti\r\n                            options={this.state.typesOptions}\r\n                            onChange={this.handleTypeChange} />\r\n                    </div>\r\n\r\n                <div className=\"sort-by\">\r\n                    <Select\r\n                        closeMenuOnSelect={true}\r\n                        placeholder=\"order\"\r\n                        options={this.state.sortByOptions}\r\n                        onChange={this.handleSortByChange} />\r\n                </div>\r\n            </div>\r\n\r\n                <div>\r\n                    <button value=\"Filter\" onClick={this.onFilter}>FILTER</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardsFilter\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport ListCards from '../components/ListCards'\r\nimport CardsFilter from '../components/CardsFilter'\r\nimport './CardsPage.css';\r\nimport { trackPromise } from 'react-promise-tracker';\r\n\r\n\r\nclass CardsPage extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             cards: null,\r\n             filteredCards: null,\r\n             errorMsg: null,\r\n             userName: localStorage.getItem(\"userName\")\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        trackPromise(\r\n        axios.get('https://api.magicthegathering.io/v1/cards?random=true&pageSize=100&language=English')\r\n            .then(response => {\r\n                // console.log(response.data.cards)\r\n                this.setState({\r\n                    cards: response.data.cards,\r\n                    filteredCards: response.data.cards\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                this.setState({errorMsg: 'Error retreiving data'})\r\n            }));\r\n    }\r\n\r\n    filterCards(filterData) {\r\n        console.log('Tes', filterData);\r\n        let cards = this.state.cards;\r\n        let filteredCards = cards.filter(card => {\r\n            let colorMatchCard = null;\r\n            if (filterData.colors && filterData.colors.length) {\r\n                filterData.colors.forEach(color => {\r\n                    if (card.colors.includes(color.label)) {\r\n                        colorMatchCard = card;\r\n\r\n                        return;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                colorMatchCard = card;\r\n            }\r\n\r\n            let typeMathcCard = null\r\n            if (filterData.types && filterData.types.length) {\r\n                filterData.types.forEach(type => {\r\n                    if (card.types.includes(type.label)) {\r\n                        typeMathcCard = card;\r\n\r\n                        return;\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                typeMathcCard = card;\r\n            }\r\n\r\n            let nameMatchCard = null;\r\n            if (filterData.search !== '') {\r\n                const searchParam = filterData.search.toLowerCase();\r\n                const cardName = card.name.toLowerCase();\r\n                const cardText = card.text ? card.text.toLowerCase() : '';\r\n                if (cardName.includes(searchParam) || cardText.includes(searchParam)) {\r\n                    nameMatchCard = card;\r\n                }\r\n            }\r\n            else {\r\n                nameMatchCard = card;\r\n            }\r\n\r\n            if (colorMatchCard && typeMathcCard && nameMatchCard) {\r\n                return colorMatchCard;\r\n            }\r\n\r\n        })\r\n\r\n        filteredCards.sort(this.compareValues('name', filterData.sortBy.value));\r\n\r\n        this.setState({\r\n            filteredCards: filteredCards\r\n        })\r\n    }\r\n\r\n    compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n          if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n            // property doesn't exist on either object\r\n            return 0;\r\n          }\r\n      \r\n          const varA = (typeof a[key] === 'string')\r\n            ? a[key].toUpperCase() : a[key];\r\n          const varB = (typeof b[key] === 'string')\r\n            ? b[key].toUpperCase() : b[key];\r\n      \r\n          let comparison = 0;\r\n          if (varA > varB) {\r\n            comparison = 1;\r\n          } else if (varA < varB) {\r\n            comparison = -1;\r\n          }\r\n          return (\r\n            (order === 'desc') ? (comparison * -1) : comparison\r\n          );\r\n        };\r\n      }\r\n\r\n    render() {\r\n        const { errorMsg } = this.state\r\n        const cards = this.state.filteredCards;\r\n        return (\r\n            <div className=\"cards-page\">\r\n                <div className=\"welcome-message\">\r\n                    <h1>\r\n                        Hello, { this.state.userName }\r\n                    </h1>\r\n                </div>\r\n\r\n                <CardsFilter onFilter={(filterData) => this.filterCards(filterData)} />\r\n\r\n                {(cards || errorMsg) &&\r\n                    <ListCards cards={cards} errorMsg={errorMsg} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardsPage\r\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport CardsPage from './pages/CardsPage';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path='/cards'>\n            <CardsPage />\n          </Route>\n          <Route path='/'>\n            <HomePage/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport Loader from 'react-loader-spinner';\n\n   const LoadingIndicator = props => {\n       const { promiseInProgress } = usePromiseTracker();\n    \n       return (\n         promiseInProgress && \n        <div\n        style={{\n        width: \"100%\",\n        height: \"100\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\n    </div>\n       );\n    }  \n  \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <LoadingIndicator/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}